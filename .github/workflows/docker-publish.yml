name: Create and publish Docker image to GitHub Container Registry (GHCR)

on:
  # Note that the template sourced directly from GH Actions has additional arguments that have been dropped
  workflow_dispatch:
    # Note that the template sourced directly from GH Actions indicates some way of doing SemVer that has been dropped here

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: python_playground

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: |
          cd python-playground
          echo "IMAGE_NAME is $IMAGE_NAME"
          echo "GITHUB_RUN_ID is $GITHUB_RUN_ID"
          docker build . --tag $IMAGE_NAME --file ./Dockerfile --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the personal access token to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          echo Change all uppercase to lowercase in IMAGE_ID
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          echo Strip 'v' prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          echo Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo Tagging docker image
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          
          echo pushing docker image
          docker push $IMAGE_ID:$VERSION
